name: 'CI'

on:
  push:
    branches: ['**']
    tags: ['**']

jobs:
  lint:
    name: 'Lint'
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-python@v2'
        with:
          python-version: '3.8'
      - name: 'Install dependencies'
        run: |
          echo "Installing CI requirements"
          pip install --upgrade --user pip flake8
          echo "Installing project requirements"
          pip install -r requirements.txt
      - name: 'Flake8 :allthethings:'
        run: 'python -m flake8 --max-line-length 120'
  test:
    name: 'Test'
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-python@v2'
        with:
          python-version: '3.8'
      - name: 'Install dependencies'
        run: |
          echo "Installing CI requirements"
          pip install --upgrade --user pip pytest coverage pyfakefs
          echo "Installing project requirements"
          pip install -r requirements.txt
      - name: 'Run tests'
        run: 'python -m coverage run --branch -m pytest'
      - name: 'Display coverage report'
        run: |
          python -m coverage report --fail-under=80 \
          --omit="*/.local/*","*/tests/test_*" -m
  container_build:
    name: 'Build and Push Docker Container'
    runs-on: 'ubuntu-20.04'
    needs: ['lint', 'test']
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'
      - name: 'Prepare'
        run: |
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
            fi
            if [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION=${GITHUB_REF#refs/heads/}
              if [[ $VERSION == main ]]; then
                VERSION=latest
              fi
            fi
            echo ::set-output name=container_tag::${VERSION}
        id: 'prep'
      - name: 'Set up Docker Buildx'
        uses: 'docker/setup-buildx-action@v1'
      - name: 'Login to Docker Hub'
        uses: 'docker/login-action@v1'
        with:
          username: 'chrisjohnson00'
          password: '${{ secrets.DOCKER_HUB_PASSWORD }}'
      - name: 'Cache Docker layers'
        uses: 'actions/cache@v3'
        with:
          path: '/tmp/.buildx-cache'
          key: '${{ runner.os }}-buildx-${{ steps.prep.outputs.container_tag }}-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-buildx-${{ steps.prep.outputs.container_tag }}-
            ${{ runner.os }}-buildx-
      - name: 'Build and Push to Packages'
        uses: 'docker/build-push-action@v2.3.0'
        with:
          context: '.'
          tags: |
            chrisjohnson00/handbrakecli:${{ steps.prep.outputs.container_tag }}
          push: 'true'
          cache-from: 'type=local,src=/tmp/.buildx-cache'
          cache-to: 'type=local,dest=/tmp/.buildx-cache'
  actionslint:
    name: 'Actions Yaml Lint'
    runs-on: 'ubuntu-20.04'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'
      - name: 'Actions Yaml Lint'
        uses: 'karancode/yamllint-github-action@v2.0.0'
        with:
          yamllint_file_or_dir: '.github/workflows'
          yamllint_comment: 'true'
          yamllint_config_datapath: '{"extends":"default","rules":{"line-length":{"max":360,"level":"warning"},"quoted-strings":{"quote-type":"single","required":true,"level":"error"},"truthy":{"check-keys":false},"document-start":{"present":false}}}'
        env:
          GITHUB_ACCESS_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
